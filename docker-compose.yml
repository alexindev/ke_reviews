version: "3.8"

services:
  database:
    image: postgres:15.0-alpine
    container_name: database
    restart: always
    env_file:
      - .env
    volumes:
      - .postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  broker:
    image: redis:alpine
    container_name: broker
    restart: always

  celery:
    build: .
    container_name: celery
    restart: always
    env_file:
      - .env
    command: bash -c "celery -A ke_service worker --beat --scheduler django --loglevel=info"
    depends_on:
      myapp:
        condition: service_healthy

  celery_flower:
    image: mher/flower
    container_name: celery_flower
    restart: always
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - celery

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./static:/static
      - ./media:/media
      - ./nginx/certbot/conf:/etc/letsencrypt:ro
      - ./nginx/certbot/www:/var/www/certbot:ro
    depends_on:
      myapp:
        condition: service_healthy

  myapp:
    build: .
    container_name: myapp
    restart: always
    env_file: .env
    ports:
      - "8000:8000"
    command: /app/entrypoint.sh
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl http://localhost:8000/ || exit 1" ]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
